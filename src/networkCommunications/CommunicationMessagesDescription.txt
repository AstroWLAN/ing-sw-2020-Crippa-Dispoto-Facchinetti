   ______                                      _            __  _                __  ___
  / ____/___  ____ ___  ____ ___  __  ______  (_)________ _/ /_(_)___  ____     /  |/  /__  ______________ _____ ____  _____
 / /   / __ \/ __ `__ \/ __ `__ \/ / / / __ \/ / ___/ __ `/ __/ / __ \/ __ \   / /|_/ / _ \/ ___/ ___/ __ `/ __ `/ _ \/ ___/
/ /___/ /_/ / / / / / / / / / / / /_/ / / / / / /__/ /_/ / /_/ / /_/ / / / /  / /  / /  __(__  |__  ) /_/ / /_/ /  __(__  )
\____/\____/_/ /_/ /_/_/ /_/ /_/\__,_/_/ /_/_/\___/\__,_/\__/_/\____/_/ /_/  /_/  /_/\___/____/____/\__,_/\__, /\___/____/
                                                                                                         /____/
------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------   MATCH CREATION
1
    {   -addPlayer:   {"action":"addPlayer","data":{"playerNickname":"Bill","lobbySize":2}}

    communicates to the server the intention to join the game,
    giving the server the (unique) nickname and the the lobby size

        -ServerResponse:    {"action":"addPlayerResponse","data":{"validNick":true, "lobbyState":true, "lobbySize":2, "fullLobby":false}}

    the server checks if it has to open a new lobby, if it is opened in size lobbySize,
    if it is already open it checks if lobbySize is the same if it is checked that there is no other nickname,
    then sends the response
    }
2
    {   -setPickedCards:   {"action":"setPickedCards","data":{"playerNickname":"Steve Jobs"}}   BROADCAST MESSAGE

    God Player whose nickname will be in the message, choose 3 or 2 cards according to the lobby size,
    the other players will receive the message will unlock the thread
    but will not choose the cards because it will not be their nickname

            {   -getDeck:    {"action":"getDeck"}
            Only the god player can call this function which requires the deck to select the cards

                -ServerResponse:    {"action":"getDeckResponse","data":{"deck":[DECK.class]}}
            Server sends to the player god, the deck from which he can choose the cards (skimmed according to the lobby size)
            }

        -ClientResponse:    {"action":"setPickedCards","data":{"cards":["Athena","Apollo"]}}

    the client's task will be to select the cards from the complete deck based on the number of players allowed
    (the server can recheck)
    }
3
    {   -setPlayerCard:   {"action":"setPlayerCard","data":{"cards":["Athena","Apollo"]}}

    The player chooses a card from the deck created by the "god" player (that will be the last)

                {   -getCardsInGame:    {"action":"getCardsInGame"}
                The player asks the server for the deck of cards chosen by GodPlayer

                    -ServerResponse:    {"action":"getCardsInGameResponse","data":{"deck":[DECK.class]}}
                Server sends to the player, the deck which will contain 2-3 (equals to lobbySize) cards chosen by GodPlayer
                }

        -ClientResponse:    {"action":"setPlayerCard","data":{"card":"Athena"}}

    the server receives the chosen card, binds it to the player together with a color,
    removes the card from the deck to be sent to the next player
    }
4   (Gorlenah)
    {   -getWorkersID:  {"action":"getWorkersID","data":{"playerNickname":"Bill"}}
    the client asks the server for the ID of each of its workers to be sent to it

        -ServerResponse:    {"action":"getWorkersIDResponse","data":[2,3]}
    }
5
    {   -getBattlefield:    {"action":"getBattlefield"}

    the client asks the server for the battlefield to be sent to him

        -ServerResponse:    {"action":"getBattlefieldResponse","data":{"cellMatrix":CellInterface[][]}}
    }
6
    {   -setInitialWorkerPosition:
    {"action":"setInitialWorkerPosition","data":{"playerNickname":"Bill","worker":0,"x":4,"y":4}}

    the player based on the battlefield received places a worker in an allowed position
    }
7
    {   -setBattlefield:    {"action":"setBattlefield","data":{"cellMatrix":CellInterface[][]}}  BROADCAST MESSAGE
    forces all clients to update the battlefield
    }
8
    {   -setPlayers:    {"action":"setPlayers","data":[PlayerInterface,PlayerInterface]}    BROADCAST MESSAGE
    forces all clients to update the Players in match
    PlayerInterface = {"playerNickname":"Bill Gates","color":"BLUE","card":"Apollo"}
    }
-------------------------------------------------------------------------------------------------   START MATCH
9
10
11